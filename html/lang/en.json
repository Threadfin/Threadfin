{
  "mainMenu": {
    "item": {
      "playlist": "Playlist",
      "pmsID": "PMS ID",
      "filter": "Filter",
      "xmltv": "XMLTV",
      "mapping": "Mapping",
      "users": "Users",
      "settings": "Settings",
      "log": "Log",
      "logout": "Logout"
    },
    "headline": {
      "playlist": "Local or remote playlists",
      "filter": "Filter playlist",
      "xmltv": "Local or remote XMLTV files",
      "mapping": "Map playlist channels to EPG channels",
      "users": "User management",
      "settings": "Settings",
      "log": "Log",
      "logout": "Logout"
    }
  },
  "confirm": {
    "restore": "All data will be replaced with those from the backup. Should the files be restored?"
  },
  "alert": {
    "fileLoadingError": "File couldn't be loaded",
    "invalidChannelNumber": "Invalid channel number",
    "missingInput": "Missing input"
  },
  "button": {
    "back": "Back",
    "backup": "Backup",
    "bulkEdit": "Bulk Edit",
    "cancel": "Cancel",
    "delete": "Delete",
    "done": "Done",
    "login": "Login",
    "new": "New",
    "next": "Next",
    "restore": "Restore",
    "save": "Save",
    "search": "Search",
    "update": "Update",
    "craeteAccount": "Create Account",
    "resetLogs": "Reset Logs",
    "uploadLogo": "Upload Logo",
    "probeChannel": "Probe Channel",
    "sortChannelsAlpha": "Sort Channels Alphabetically",
    "sortChannelNumbers": "Sort Channels"
  },
  "filter": {
    "table": {
      "name": "Filter Name",
      "type": "Filter Type",
      "filter": "Filter"
    },
    "custom": "Custom",
    "group": "Group",
    "name": {
      "title": "Filter Name",
      "placeholder": "Filter name",
      "description": ""
    },
    "startingnumber": {
      "title": "Filter Starting Number",
      "placeholder": "Filter Starting Number",
      "description": "Starting Channel Number to use for this Group Filter (Default is 1000)"
    },
    "category": {
      "title": "Filter Category",
      "placeholder": "Filter Category",
      "description": "Filter Category sets all channels in the filter to a specific category (news, sports, etc)"
    },
    "description": {
      "title": "Description",
      "placeholder": "Description",
      "description": ""
    },
    "type": {
      "title": "Type",
      "groupTitle": "Group Title",
      "customFilter": "Custom Filter"
    },
    "liveEvent": {
      "title": "Live Event Group",
      "placeholder": "",
      "description": ""
    },
    "caseSensitive": {
      "title": "Case Sensitive",
      "placeholder": "",
      "description": ""
    },
    "filterRule": {
      "title": "Filter Rule",
      "placeholder": "Sport {HD} !{ES,IT}",
      "description": ""
    },
    "filterGroup": {
      "title": "Group Title",
      "placeholder": "",
      "description": "Select a M3U group. (Counter)<br>Changing the group title in the M3U invalidates the filter."
    },
    "include": {
      "title": "Include",
      "placeholder": "FHD,UHD",
      "description": "Channel name must include.<br>(Comma separated) Comma means or"
    },
    "exclude": {
      "title": "Exclude",
      "placeholder": "ES,IT",
      "description": "Channel name must not contain.<br>(Comma separated) Comma means or"
    }
  },
  "playlist": {
    "table": {
      "playlist": "Playlist",
      "buffer": "Buffer",
      "tuner": "Tuner",
      "lastUpdate": "Last Update",
      "availability": "Availability",
      "type": "Type",
      "streams": "Streams",
      "groupTitle": "group-title",
      "tvgID": "tvg-id",
      "uniqueID": "Unique ID"
    },
    "playlistType": {
      "title": "Playlist type",
      "placeholder": "",
      "description": ""
    },
    "type": {
      "title": "Type",
      "placeholder": "",
      "description": ""
    },
    "name": {
      "title": "Name",
      "placeholder": "Playlist name",
      "description": ""
    },
    "description": {
      "title": "Description",
      "placeholder": "Description",
      "description": ""
    },
    "fileM3U": {
      "title": "M3U File",
      "placeholder": "File path or URL of the M3U",
      "description": ""
    },
    "fileHDHR": {
      "title": "HDHomeRun IP",
      "placeholder": "IP address and port (192.168.1.10:5004)",
      "description": ""
    },
    "buffer": {
      "title": "Buffer",
      "placeholder": "",
      "description": "Buffer for the streams. <br>Only available with activated tuner."
    },
    "tuner": {
      "title": "Tuner / Streams",
      "placeholder": "",
      "description": "Number of parallel connections that can be established to the provider. <br>Only available with activated buffer.<br>New settings will only be applied after quitting all streams."
    },
    "http_proxy_ip": {
      "title": "HTTP Proxy IP",
      "placeholder": "192.168.0.2",
      "description": "IP address to be used by HTTP Proxy"
    },
    "http_proxy_port": {
      "title": "HTTP Proxy Port",
      "placeholder": "8888",
      "description": "Port to be used by HTTP Proxy"
    }
  },
  "xmltv": {
    "table": {
      "guide": "Guide",
      "lastUpdate": "Last Update",
      "availability": "Availability",
      "channels": "Channels",
      "programs": "Programs"
    },
    "name": {
      "title": "Name",
      "placeholder": "Guide name",
      "description": ""
    },
    "description": {
      "title": "Description",
      "placeholder": "Description",
      "description": ""
    },
    "fileXMLTV": {
      "title": "XMLTV File",
      "placeholder": "File path or URL of the XMLTV",
      "description": ""
    },
    "http_proxy_ip": {
      "title": "HTTP Proxy IP",
      "placeholder": "192.168.0.2",
      "description": "IP address to be used by HTTP Proxy"
    },
    "http_proxy_port": {
      "title": "HTTP Proxy Port",
      "placeholder": "8888",
      "description": "Port to be used by HTTP Proxy"
    }
  },
  "mapping": {
    "table": {
      "chNo": "Ch. No.",
      "logo": "Logo",
      "channelName": "Channel Name",
      "playlist": "Playlist",
      "groupTitle": "Group Title",
      "xmltvFile": "XMLTV File",
      "xmltvID": "XMLTV ID"
    },
    "active": {
      "title": "Active",
      "placeholder": "",
      "description": ""
    },
    "channelName": {
      "title": "Channel Name",
      "placeholder": "",
      "description": ""
    },
    "channelGroupStart": {
      "title": "Channel Group Start",
      "placeholder": "",
      "description": ""
    },
    "sortChannelsAlpha": {
      "title": "Sort Alphabetically",
      "placeholder": "",
      "description": ""
    },
    "sortChannels": {
      "title": "Sort Channels",
      "placeholder": "",
      "description": ""
    },
    "description": {
      "title": "Channel Description",
      "placeholder": "Used by the Dummy as an XML description",
      "description": ""
    },
    "updateChannelName": {
      "title": "Update Channel Name",
      "placeholder": "",
      "description": ""
    },
    "channelLogo": {
      "title": "Logo URL",
      "placeholder": "",
      "description": ""
    },
    "updateChannelLogo": {
      "title": "Update Channel Logo",
      "placeholder": "",
      "description": ""
    },
    "epgCategory": {
      "title": "EPG Category",
      "placeholder": "",
      "description": ""
    },
    "m3uGroupTitle": {
      "title": "Group Title (threadfin.m3u)",
      "placeholder": "",
      "description": ""
    },
    "xmltvFile": {
      "title": "XMLTV File",
      "placeholder": "",
      "description": ""
    },
    "xmltvChannel": {
      "title": "XMLTV Channel",
      "placeholder": "",
      "description": ""
    },
    "ppvextra": {
      "title": "PPV Extra Title",
      "placeholder": "",
      "description": "This will add custom text to the Programme data"
    },
    "backupChannel1": {
      "title": "Backup Channel 1",
      "placeholder": "",
      "description": ""
    },
    "backupChannel2": {
      "title": "Backup Channel 2",
      "placeholder": "",
      "description": ""
    },
    "backupChannel3": {
      "title": "Backup Channel 3",
      "placeholder": "",
      "description": ""
    },
    "hideChannel": {
      "title": "Hide Backup Channel",
      "placeholder": "",
      "description": ""
    },
    "probeDetails": {
      "title": "Probe Details",
      "placeholder": "",
      "description": ""
    }
  },
  "users": {
    "table": {
      "username": "Username",
      "password": "Password",
      "web": "WEB",
      "pms": "PMS",
      "m3u": "M3U",
      "xml": "XML",
      "api": "API"
    },
    "username": {
      "title": "Username",
      "placeholder": "Username",
      "description": ""
    },
    "password": {
      "title": "Password",
      "placeholder": "Password",
      "description": ""
    },
    "confirm": {
      "title": "Confirm",
      "placeholder": "Password confirm",
      "description": ""
    },
    "web": {
      "title": "Web Access",
      "placeholder": "",
      "description": ""
    },
    "pms": {
      "title": "PMS Access",
      "placeholder": "",
      "description": ""
    },
    "m3u": {
      "title": "M3U Access",
      "placeholder": "",
      "description": ""
    },
    "xml": {
      "title": "XML Access",
      "placeholder": "",
      "description": ""
    },
    "api": {
      "title": "API Access",
      "placeholder": "",
      "description": ""
    }
  },
  "settings": {
    "category": {
      "general": "General",
      "files": "Files",
      "streaming": "Streaming",
      "backup": "Backup",
      "authentication": "Authentication"
    },
    "update": {
      "title": "Schedule for updating (Playlist, XMLTV, Backup)",
      "placeholder": "0000,1000,2000",
      "description": "Time in 24 hour format (0800 = 8:00 am). More times can be entered comma separated. Leave this field empty if no updates are to be carried out."
    },
    "api": {
      "title": "API Interface",
      "description": "Via API interface it is possible to send commands to Threadfin. API documentation is <a href='https://github.com/Threadfin/Threadfin-Documentation/blob/master/en/configuration.md#api'>here</a>"
    },
    "ssdp": {
      "title": "SSDP",
      "description": "SSDP is a network protocol for service discovery. It is used for the automatic detection of Threadfin in the network."
    },
    "dummy": {
      "title": "Enable Default Dummy Data",
      "description": "When enabled, this will automatically map inactive channels to the dummy data channel below. Use this to keep Live Event channels active."
    },
    "dummyChannel": {
      "title": "Dummy Data Channel",
      "description": "Select the default channel to use when mapping inactive channels to the dummy data."
    },
    "ignoreFilters": {
      "title": "Ignore Filters",
      "description": "If checked, filtering is completely ignored."
    },
    "epgSource": {
      "title": "EPG Source",
      "description": "PMS:<br>- Use EPG data from Plex, Emby or Jellyfin <br><br>XEPG:<br>- Use of one or more XMLTV files<br>- Channel management<br>- M3U / XMLTV export (HTTP link for IPTV apps)"
    },
    "tuner": {
      "title": "Number of Tuners",
      "description": "Number of parallel connections that can be established to the provider.<br>Available for: Plex, Emby, Jellyfin, M3U (with active buffer).<br>After a change, Threadfin must be delete in the Plex / Emby / Jellyfin DVR settings and set up again."
    },
    "filesUpdate": {
      "title": "Updates all files at startup",
      "description": "Updates all playlists, tuner and XMLTV files at startup."
    },
    "cacheImages": {
      "title": "Image Caching",
      "description": "All images from the XMLTV file are cached, allowing faster rendering of the grid in the client.<br>Downloading the images may take a while and will be done in the background."
    },
    "replaceEmptyImages": {
      "title": "Replace missing program images",
      "description": "If the poster in the XMLTV program is missing, the channel logo will be used."
    },
    "replaceChannelTitle": {
      "title": "Replace PPV channels title/desc",
      "description": "Use this if your provider maps the PPV event name to the channel name"
    },
    "ThreadfinAutoUpdate": {
      "title": "Automatic update of Threadfin",
      "description": "If a new version of Threadfin is available, it will be automatically installed. The updates are downloaded from GitHub."
    },
    "streamBuffering": {
      "title": "Stream Buffer",
      "description": "Functions of the buffer:<br>- The stream is passed from FFmpeg or VLC to Plex, Emby, Jellyfin or M3U Player<br>- Small jerking of the streams can be compensated<br>- HLS / M3U8 support<br>- RTP / RTPS support<br>- Re-streaming<br>- Separate tuner limit for each playlist",
      "info_false": "No Buffer (Client connects directly to the streaming server)",
      "info_ffmpeg": "FFmpeg connects to the streaming server",
      "info_vlc": "VLC connects to the streaming server"
    },
    "udpxy": {
      "title": "UDPxy address",
      "description": "The address of your UDPxy server. If set, and the channel URLs in the m3u is multicast, Threadfin will rewrite it so that it is accessed via the UDPxy service.",
      "placeholder": "host:port"
    },
    "ffmpegPath": {
      "title": "FFmpeg Binary Path",
      "description": "Path to FFmpeg binary.",
      "placeholder": "/path/to/ffmpeg"
    },
    "ffmpegOptions": {
      "title": "FFmpeg Options",
      "description": "FFmpeg options.<br>Only change if you know what you are doing.<br>Leave blank to set default settings.",
      "placeholder": "Leave blank to set default settings"
    },
    "ffmpegForceHttp": {
      "title": "Force HTTP for FFMPEG",
      "description": "If checked, will rewrite the m3u to use http instead of https. Use this for https links in ffmpeg"
    },
    "vlcPath": {
      "title": "VLC / CVLC Binary Path",
      "description": "Path to VLC / CVLC binary.",
      "placeholder": "/path/to/cvlc"
    },
    "vlcOptions": {
      "title": "VLC / CVLC Options",
      "description": "VLC / CVLC options.<br>Only change if you know what you are doing.<br>Leave blank to set default settings.",
      "placeholder": "Leave blank to set default settings"
    },
    "bufferSize": {
      "title": "Buffer Size",
      "description": "Buffer size in MB.<br>M3U8: If the TS segment smaller then the buffer size, the file size of the segment is used."
    },
    "storeBufferInRAM":
    {
      "title": "Store buffer in RAM",
      "description": "If checked, write buffer to RAM instead of writing to disk"
    },
    "forceHttps":
    {
      "title": "Force HTTPS",
      "description": "With image caching enabled, if checked, will rewrite M3U and EPG urls to include https protocol as well as https port (default is 443)"
    },
    "httpsPort":
    {
      "title": "HTTPS Port",
      "description": "With image caching enabled, port to use for forcing https. Default is 443"
    },
    "httpsThreadfinDomain":
    {
      "title": "HTTPS Threadfin Domain",
      "description": "With image caching enabled, rewrite the threadfin ip address in the m3u to use a domain for HTTPS mode. Do NOT include https (ex: somedomain.com)"
    },
    "bindIpAddress":
    {
      "title": "Bind IP Address for WebUI/API",
      "description": "This will explicity set the bind ip address instead of trying to assume it. This is useful for systems with multiple network interfaces."
    },
    "httpThreadfinDomain":
    {
      "title": "HTTP Threadfin Domain",
      "description": "With image caching enabled, rewrite the threadfin ip address in the m3u to use a domain for HTTP mode. Do NOT include http (ex: somedomain.com)"
    },
    "enableNonAscii":
    {
      "title": "Enable Non-ASCII",
      "description": "If checked, will allow special non ascii characters in the M3U and EPG. Default is disabled"
    },
    "epgCategories":
    {
      "title": "EPG Categories",
      "description": "Customize the EPG Categories. The format is key:value|key:value, so News:news|Sports:sports|Movies:movies"
    },
    "epgCategoriesColors":
    {
      "title": "EPG Categories Colors",
      "description": "Customize the EPG Category colors. The format is value:color|value:color, so news:tomato|sports:yellowgreen|movies:royalblue"
    },
    "bufferTimeout": {
      "title": "Timeout for new client connections",
      "description": "The Threadfin buffer waits until new client connections are established. Helpful for fast channel switching. Value in milliseconds.",
      "placeholder": "100"
    },
    "userAgent": {
      "title": "User Agent",
      "description": "User Agent for HTTP requests. For every HTTP connection, this value is used for the user agent. Should only be changed if Threadfin is blocked.",
      "placeholder": "Threadfin"
    },
    "backupPath": {
      "title": "Location for automatic backups",
      "placeholder": "/mnt/data/backup/threadfin/",
      "description": "Before any update of the provider data by the schedule, Threadfin creates a backup. The path for the automatic backups can be changed. Threadfin requires write permission for this folder."
    },
    "tempPath": {
      "title": "Location for the temporary files",
      "placeholder": "/tmp/threadfin/",
      "description": "Location for the buffer files."
    },
    "backupKeep": {
      "title": "Number of backups to keep",
      "description": "Number of backups to keep. Older backups are automatically deleted."
    },
    "authenticationWEB": {
      "title": "WEB Authentication",
      "description": "Access to the web interface only possible with credentials."
    },
    "authenticationPMS": {
      "title": "PMS Authentication",
      "description": "Plex requests are only possible with authentication. <br><b>Warning!!!</b> After activating this function Threadfin must be delete in the PMS DVR settings and set up again."
    },
    "authenticationM3U": {
      "title": "M3U Authentication",
      "description": "Downloading the threadfin.m3u file via an HTTP request is only possible with authentication."
    },
    "authenticationXML": {
      "title": "XML Authentication",
      "description": "Downloading the threadfin.xml file via an HTTP request is only possible with authentication"
    },
    "authenticationAPI": {
      "title": "API Authentication",
      "description": "Access to the API interface is only possible with authentication."
    }
  },
  "wizard": {
    "epgSource": {
      "title": "EPG Source",
      "description": "PMS:<br>- Use EPG data from Plex, Emby or Jellyfin <br><br>XEPG:<br>- Use of one or more XMLTV files<br>- Channel management<br>- M3U / XMLTV export (HTTP link for IPTV apps)"
    },
    "tuner": {
      "title": "Number of tuners",
      "description": "Number of parallel connections that can be established to the provider.<br>Available for: Plex, Emby, Jellyfin, M3U (with active buffer).<br>After a change, Threadfin must be delete in the Plex / Emby / Jellyfin DVR settings and set up again."
    },
    "m3u": {
      "title": "M3U Playlist",
      "placeholder": "File path or URL of the M3U",
      "description": "Local or remote playlists"
    },
    "xmltv": {
      "title": "XMLTV File",
      "placeholder": "File path or URL of the XMLTV",
      "description": "Local or remote XMLTV file"
    }
  },
  "login": {
    "failed": "User authentication failed",
    "headline": "Login",
    "username": {
      "title": "Username",
      "placeholder": "Username"
    },
    "password": {
      "title": "Password",
      "placeholder": "Password"
    }
  },
  "account": {
    "failed": "Password does not match",
    "headline": "Create user account",
    "username": {
      "title": "Username",
      "placeholder": "Username"
    },
    "password": {
      "title": "Password",
      "placeholder": "Password"
    },
    "confirm": {
      "title": "Confirm",
      "placeholder": "Confirm"
    }
  }
}